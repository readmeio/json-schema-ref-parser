name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 * *"

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm ci
      - run: npm run lint

  node_tests:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        node:
          - 18
          - 20

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript tests
        run: npm run test:typescript

      - name: Run Node tests
        run: npm run coverage:node

  browser_tests:
    name: Browser
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: true
      matrix:
        browser:
          - chrome
          - firefox
        os:
          - ubuntu-latest
          - windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci

      # Chrome
      - uses: browser-actions/setup-chrome@latest
        if: matrix.browser == 'chrome'

      - name: Run tests on Chrome
        if: matrix.browser == 'chrome'
        run: |
          npm run test:browser -- --browsers=ChromeHeadless

      # Firefox
      - uses: browser-actions/setup-chrome@latest
        if: matrix.browser == 'firefox'

      - name: Run tests on Firefox
        if: matrix.browser == 'firefox'
        run: |
          npm run test:browser -- --browsers=FirefoxHeadless
